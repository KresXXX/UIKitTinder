//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R: Sendable {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 28 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: I don't want anything casual
      ///
      /// Key: ameliaMargaret
      ///
      /// Locales: en, ru, pt-PT
      var ameliaMargaret: RswiftResources.StringResource { .init(key: "ameliaMargaret", tableName: "Localizable", source: source, developmentValue: "I don't want anything casual", comment: nil) }

      /// en translation: Too pretty to be true
      ///
      /// Key: anitaEleanor
      ///
      /// Locales: en, ru, pt-PT
      var anitaEleanor: RswiftResources.StringResource { .init(key: "anitaEleanor", tableName: "Localizable", source: source, developmentValue: "Too pretty to be true", comment: nil) }

      /// en translation: I don't drink, I don't smoke and I don't like parties
      ///
      /// Key: annaBeatriz
      ///
      /// Locales: en, ru, pt-PT
      var annaBeatriz: RswiftResources.StringResource { .init(key: "annaBeatriz", tableName: "Localizable", source: source, developmentValue: "I don't drink, I don't smoke and I don't like parties", comment: nil) }

      /// en translation: Back to tinder
      ///
      /// Key: backButton
      ///
      /// Locales: en, ru, pt-PT
      var backButton: RswiftResources.StringResource { .init(key: "backButton", tableName: "Localizable", source: source, developmentValue: "Back to tinder", comment: nil) }

      /// en translation: Did you like it by accident?
      ///
      /// Key: deboraLima
      ///
      /// Locales: en, ru, pt-PT
      var deboraLima: RswiftResources.StringResource { .init(key: "deboraLima", tableName: "Localizable", source: source, developmentValue: "Did you like it by accident?", comment: nil) }

      /// en translation: In search of new friendships
      ///
      /// Key: deboraLima1
      ///
      /// Locales: en, ru, pt-PT
      var deboraLima1: RswiftResources.StringResource { .init(key: "deboraLima1", tableName: "Localizable", source: source, developmentValue: "In search of new friendships", comment: nil) }

      /// en translation: Recent Instagram photos
      ///
      /// Key: descriptionLabel
      ///
      /// Locales: en, ru, pt-PT
      var descriptionLabel: RswiftResources.StringResource { .init(key: "descriptionLabel", tableName: "Localizable", source: source, developmentValue: "Recent Instagram photos", comment: nil) }

      /// en translation: header ID
      ///
      /// Key: headerId
      ///
      /// Locales: en, ru, pt-PT
      var headerId: RswiftResources.StringResource { .init(key: "headerId", tableName: "Localizable", source: source, developmentValue: "header ID", comment: nil) }

      /// en translation: I hope you are open-minded
      ///
      /// Key: helenAungSan
      ///
      /// Locales: en, ru, pt-PT
      var helenAungSan: RswiftResources.StringResource { .init(key: "helenAungSan", tableName: "Localizable", source: source, developmentValue: "I hope you are open-minded", comment: nil) }

      /// en translation: Good humor is essential
      ///
      /// Key: lauraKomako
      ///
      /// Locales: en, ru, pt-PT
      var lauraKomako: RswiftResources.StringResource { .init(key: "lauraKomako", tableName: "Localizable", source: source, developmentValue: "Good humor is essential", comment: nil) }

      /// en translation: I'm here to make new friends
      ///
      /// Key: lauraNelle
      ///
      /// Locales: en, ru, pt-PT
      var lauraNelle: RswiftResources.StringResource { .init(key: "lauraNelle", tableName: "Localizable", source: source, developmentValue: "I'm here to make new friends", comment: nil) }

      /// en translation: Want to know more about me?
      ///
      /// Key: lauraOliveira
      ///
      /// Locales: en, ru, pt-PT
      var lauraOliveira: RswiftResources.StringResource { .init(key: "lauraOliveira", tableName: "Localizable", source: source, developmentValue: "Want to know more about me?", comment: nil) }

      /// en translation: Looking for a good chat
      ///
      /// Key: lauraOliveira1
      ///
      /// Locales: en, ru, pt-PT
      var lauraOliveira1: RswiftResources.StringResource { .init(key: "lauraOliveira1", tableName: "Localizable", source: source, developmentValue: "Looking for a good chat", comment: nil) }

      /// en translation: Last one to match calls
      ///
      /// Key: mariaSilva
      ///
      /// Locales: en, ru, pt-PT
      var mariaSilva: RswiftResources.StringResource { .init(key: "mariaSilva", tableName: "Localizable", source: source, developmentValue: "Last one to match calls", comment: nil) }

      /// en translation: I love partying
      ///
      /// Key: mariaVirginia
      ///
      /// Locales: en, ru, pt-PT
      var mariaVirginia: RswiftResources.StringResource { .init(key: "mariaVirginia", tableName: "Localizable", source: source, developmentValue: "I love partying", comment: nil) }

      /// en translation: I have an open relationship
      ///
      /// Key: maryDandara
      ///
      /// Locales: en, ru, pt-PT
      var maryDandara: RswiftResources.StringResource { .init(key: "maryDandara", tableName: "Localizable", source: source, developmentValue: "I have an open relationship", comment: nil) }

      /// en translation: Say something nice...
      ///
      /// Key: messageField
      ///
      /// Locales: en, ru, pt-PT
      var messageField: RswiftResources.StringResource { .init(key: "messageField", tableName: "Localizable", source: source, developmentValue: "Say something nice...", comment: nil) }

      /// en translation: you liked it too!
      ///
      /// Key: messageLabel
      ///
      /// Locales: en, ru, pt-PT
      var messageLabel: RswiftResources.StringResource { .init(key: "messageLabel", tableName: "Localizable", source: source, developmentValue: "you liked it too!", comment: nil) }

      /// en translation: Want to know more? Just like it
      ///
      /// Key: nadiaJoana
      ///
      /// Locales: en, ru, pt-PT
      var nadiaJoana: RswiftResources.StringResource { .init(key: "nadiaJoana", tableName: "Localizable", source: source, developmentValue: "Want to know more? Just like it", comment: nil) }

      /// en translation: photos ID
      ///
      /// Key: photosId
      ///
      /// Locales: en, ru, pt-PT
      var photosId: RswiftResources.StringResource { .init(key: "photosId", tableName: "Localizable", source: source, developmentValue: "photos ID", comment: nil) }

      /// en translation: profile ID
      ///
      /// Key: profileId
      ///
      /// Locales: en, ru, pt-PT
      var profileId: RswiftResources.StringResource { .init(key: "profileId", tableName: "Localizable", source: source, developmentValue: "profile ID", comment: nil) }

      /// en translation: I don't know how to describe myself
      ///
      /// Key: rosaOliveira
      ///
      /// Locales: en, ru, pt-PT
      var rosaOliveira: RswiftResources.StringResource { .init(key: "rosaOliveira", tableName: "Localizable", source: source, developmentValue: "I don't know how to describe myself", comment: nil) }

      /// en translation: Whoever describes himself limits himself
      ///
      /// Key: sabrinaSantos
      ///
      /// Locales: en, ru, pt-PT
      var sabrinaSantos: RswiftResources.StringResource { .init(key: "sabrinaSantos", tableName: "Localizable", source: source, developmentValue: "Whoever describes himself limits himself", comment: nil) }

      /// en translation: I think we match
      ///
      /// Key: sandraSouza
      ///
      /// Locales: en, ru, pt-PT
      var sandraSouza: RswiftResources.StringResource { .init(key: "sandraSouza", tableName: "Localizable", source: source, developmentValue: "I think we match", comment: nil) }

      /// en translation: shirtless images don't impress me
      ///
      /// Key: sandraSouza1
      ///
      /// Locales: en, ru, pt-PT
      var sandraSouza1: RswiftResources.StringResource { .init(key: "sandraSouza1", tableName: "Localizable", source: source, developmentValue: "shirtless images don't impress me", comment: nil) }

      /// en translation: To send
      ///
      /// Key: sendMessageButton
      ///
      /// Locales: en, ru, pt-PT
      var sendMessageButton: RswiftResources.StringResource { .init(key: "sendMessageButton", tableName: "Localizable", source: source, developmentValue: "To send", comment: nil) }

      /// en translation: If you don't talk, don't even like it
      ///
      /// Key: silvaPaz
      ///
      /// Locales: en, ru, pt-PT
      var silvaPaz: RswiftResources.StringResource { .init(key: "silvaPaz", tableName: "Localizable", source: source, developmentValue: "If you don't talk, don't even like it", comment: nil) }

      /// en translation: Hi, it looks like we're a good match
      ///
      /// Key: tahBeatriz
      ///
      /// Locales: en, ru, pt-PT
      var tahBeatriz: RswiftResources.StringResource { .init(key: "tahBeatriz", tableName: "Localizable", source: source, developmentValue: "Hi, it looks like we're a good match", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 4 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `backButtonBackgroundColor`.
    var backButtonBackgroundColor: RswiftResources.ColorResource { .init(name: "backButtonBackgroundColor", path: [], bundle: bundle) }

    /// Color `loadViewBackgroundColor`.
    var loadViewBackgroundColor: RswiftResources.ColorResource { .init(name: "loadViewBackgroundColor", path: [], bundle: bundle) }

    /// Color `titleColor`.
    var titleColor: RswiftResources.ColorResource { .init(name: "titleColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 30 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `card-deslike`.
    var cardDeslike: RswiftResources.ImageResource { .init(name: "card-deslike", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `card-like`.
    var cardLike: RswiftResources.ImageResource { .init(name: "card-like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-chat`.
    var iconeChat: RswiftResources.ImageResource { .init(name: "icone-chat", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-deslike`.
    var iconeDeslike: RswiftResources.ImageResource { .init(name: "icone-deslike", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-down`.
    var iconeDown: RswiftResources.ImageResource { .init(name: "icone-down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-like`.
    var iconeLike: RswiftResources.ImageResource { .init(name: "icone-like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-logo`.
    var iconeLogo: RswiftResources.ImageResource { .init(name: "icone-logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-perfil`.
    var iconePerfil: RswiftResources.ImageResource { .init(name: "icone-perfil", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icone-superlike`.
    var iconeSuperlike: RswiftResources.ImageResource { .init(name: "icone-superlike", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `perfil`.
    var perfil: RswiftResources.ImageResource { .init(name: "perfil", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-1`.
    var pessoa1: RswiftResources.ImageResource { .init(name: "pessoa-1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-10`.
    var pessoa10: RswiftResources.ImageResource { .init(name: "pessoa-10", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-11`.
    var pessoa11: RswiftResources.ImageResource { .init(name: "pessoa-11", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-12`.
    var pessoa12: RswiftResources.ImageResource { .init(name: "pessoa-12", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-13`.
    var pessoa13: RswiftResources.ImageResource { .init(name: "pessoa-13", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-14`.
    var pessoa14: RswiftResources.ImageResource { .init(name: "pessoa-14", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-15`.
    var pessoa15: RswiftResources.ImageResource { .init(name: "pessoa-15", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-16`.
    var pessoa16: RswiftResources.ImageResource { .init(name: "pessoa-16", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-17`.
    var pessoa17: RswiftResources.ImageResource { .init(name: "pessoa-17", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-18`.
    var pessoa18: RswiftResources.ImageResource { .init(name: "pessoa-18", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-19`.
    var pessoa19: RswiftResources.ImageResource { .init(name: "pessoa-19", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-2`.
    var pessoa2: RswiftResources.ImageResource { .init(name: "pessoa-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-20`.
    var pessoa20: RswiftResources.ImageResource { .init(name: "pessoa-20", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-3`.
    var pessoa3: RswiftResources.ImageResource { .init(name: "pessoa-3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-4`.
    var pessoa4: RswiftResources.ImageResource { .init(name: "pessoa-4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-5`.
    var pessoa5: RswiftResources.ImageResource { .init(name: "pessoa-5", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-6`.
    var pessoa6: RswiftResources.ImageResource { .init(name: "pessoa-6", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-7`.
    var pessoa7: RswiftResources.ImageResource { .init(name: "pessoa-7", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-8`.
    var pessoa8: RswiftResources.ImageResource { .init(name: "pessoa-8", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pessoa-9`.
    var pessoa9: RswiftResources.ImageResource { .init(name: "pessoa-9", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "icone-logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'icone-logo' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
  }
}